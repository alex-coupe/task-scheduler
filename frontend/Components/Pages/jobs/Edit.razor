@page "/jobs/edit/{Id:int}"
@using Service.DataTransfer.Job
@using Service.Repositories.Interfaces
@inject IJobRepository _jobRepository

<h3>Edit Job</h3>

<div class="container text-center">
    @if (!Loading)
    {
        <EditForm Model="viewModel" OnValidSubmit="HandleSubmit">
            <label>Job Name</label>
            <InputText type="text" @bind-Value="viewModel.Name" />
            
            <button type="submit" class="btn btn-primary">Save</button>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    }
    else
    {
        <p>Loading...</p>
    }

    @if (Saved)
    {
        <p class="text-center text-success">Saved Successfully!</p>
    }

    <p>@Error</p>
    </div>
@code {
    [Parameter]
    public int Id { get; set; }

    private string Error { get; set; }

    private bool Loading { get; set; } = true;

    private bool Saved { get; set; } = false;

    UpdateJobDTO viewModel = new UpdateJobDTO();

   

    public async Task HandleSubmit()
    {
        try
        {
            await _jobRepository.UpdateJob(viewModel);
            Saved = true;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {

        try
        {
            viewModel = await _jobRepository.GetJobById(Id);
            Loading = false;

        }
        catch (Exception ex)
        {
            Error = ex.Message;
            Loading = false;
        }

    }
}
